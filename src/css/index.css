/* Variables */
:root {
	--primary-color: red;
	--secondary-color: wheat;
	--text-h: purple;
	--text-p: orange;
	--text-link: red;
	--padding: .5em 1em;
}

html, body {
  margin: 0;
  width: 100%;
  height: 100%;
  background: var(--primary-color);
  color: var(--text-p);
}

h1,h2,h3,h4,h5,h6 {
	color: var(--text-h);
}

p {
	color: var(--text-p);
}

div {
}

a {
	color: var(--text-link);
}

/* Bootstrap override */
.row {
	margin: 0;
}
[class^=col] {
	padding: 0;
}

/* App Container */
#app {
	width: 100%;
	height: 100%;
	background: #f2f2f2;
	overflow: hidden;
}

.react-app {
	width: 100%;
	height: 100%;
	position: relative;
	transition: all .6s;
}
.react-app.composing {
	box-shadow: 0px 0px 10px 1px rgba(0,0,0,0.5);
}
.react-app.composing.active {
	transform: scale(.8,.8);
}

.composing-columns {
	width: 100%;
	height: 100%;
	display: flex;
	position: absolute;
	top: 0;
	left: 0;
}
.composing-columns.active {
	display: flex;
}
.composing-columns-column {
	width: 8.33%;
	height: 100%;
	background: white;
	transition: all 1s ease-out;
}
.composing-columns-column:nth-child(odd) {
	transform: translate(0, -3000px);
}
.composing-columns-column:nth-child(even) {
	transform: translate(0, 3000px);
}
.composing-columns.active .composing-columns-column {
	transform: translate(0,0);
}

@media screen and (orientation: portrait) {
	.react-app {
		background: wheat;
	}
}

/* Header */
.react-header {
	display: flex;
	align-items: center;
	padding: var(--padding);
	overflow: hidden;
}
.react-header h1 {
	padding: 1rem;
    margin: 0;
}

/* Nav */
.nav {
	margin-left: auto;
}
.nav > * {
	padding: var(--padding);
}

/* Contact */
.react-contact {
    position: absolute;
    right: 0;
    bottom: 10%;
	display: flex;
    flex-direction: column;
    align-items: center;
    z-index: 999;
}
.react-contact-item {
	width: 32px;
	height: 32px;
	display: inline-block;
	margin: .5em;
	background-image: url();
	background-position: center;
	background-repeat: no-repeat;
	background-size: 100%;
	opacity: .3;
    transition: opacity .15s cubic-bezier(1,0,1,0), transform .15s cubic-bezier(1,0,0.6,3);
}

@media screen and (min-width: 768px) {
	.react-contact-item:hover {
		opacity: 1;
	    transform: scale(1.25, 1.25);
	}
}

/**
 * ANIMATIONS
 */
@keyframes page-composing {
	0% {
		box-shadow: 0px 0px 10px -1px rgba(0,0,0,0.5);
	}
	25% {
		transform: scale(.8,.8);
	}
}

@keyframes flow {
	0% {transform: scale(.1,.1) skew(70deg,15deg) translate(-100%,-100%);}
	50% {transform: scale(.25,.25) skew(60deg,15deg) translate(-20%,-50%);}
	75% {transform: scale(.4,.4) skew(50deg,15deg) translate(-5%,-25%);}
	90% {transform: scale(.5,.5) skew(10deg,3deg) translate(0%,-10%);}
	100% {transform: scale(1,1) skew(0deg,0deg) translate(0,0);}
}